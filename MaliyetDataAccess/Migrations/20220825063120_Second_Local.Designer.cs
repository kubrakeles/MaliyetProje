// <auto-generated />
using System;
using MaliyetDataAccess.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaliyetDataAccess.Migrations
{
    [DbContext(typeof(TenderContext))]
    [Migration("20220825063120_Second_Local")]
    partial class Second_Local
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MaliyetCore.Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OperationClaim");
                });

            modelBuilder.Entity("MaliyetCore.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MaliyetCore.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserOperationClaims");
                });

            modelBuilder.Entity("MaliyetEntities.Concrete.TenderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TenderTypes");
                });

            modelBuilder.Entity("MaliyetEntities.Concrete.Unit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("MaliyetEntities.Tender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnalysisRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Contratprice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EnthusiastFoundation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTypeWorkLoad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KirimRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketResearchRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OpproximateCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpproximateCostAfterTender")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OtherExplanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherFoundationContractPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoseRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreviousCPTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousConractPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousOCTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousOpproximateCoast")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceDifference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TenderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TenderDateArrived")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenderRegisterNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenderState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenderTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TenderTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TendererProposal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenderingProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenderTypeId");

                    b.HasIndex("UnitId");

                    b.ToTable("Tenders");
                });

            modelBuilder.Entity("MaliyetEntities.Tender", b =>
                {
                    b.HasOne("MaliyetEntities.Concrete.TenderType", null)
                        .WithMany("Tenders")
                        .HasForeignKey("TenderTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaliyetEntities.Concrete.Unit", null)
                        .WithMany("Tenders")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaliyetEntities.Concrete.TenderType", b =>
                {
                    b.Navigation("Tenders");
                });

            modelBuilder.Entity("MaliyetEntities.Concrete.Unit", b =>
                {
                    b.Navigation("Tenders");
                });
#pragma warning restore 612, 618
        }
    }
}
